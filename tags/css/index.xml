<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>css on 冷宫</title><link>https://jo-hnny.github.io/tags/css/</link><description>Recent content in css on 冷宫</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 23 Dec 2020 11:41:47 +0800</lastBuildDate><atom:link href="https://jo-hnny.github.io/tags/css/index.xml" rel="self" type="application/rss+xml"/><item><title>在scss和css_module环境中切换主题</title><link>https://jo-hnny.github.io/p/%E5%9C%A8scss%E5%92%8Ccss_module%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%88%87%E6%8D%A2%E4%B8%BB%E9%A2%98/</link><pubDate>Wed, 23 Dec 2020 11:41:47 +0800</pubDate><guid>https://jo-hnny.github.io/p/%E5%9C%A8scss%E5%92%8Ccss_module%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%88%87%E6%8D%A2%E4%B8%BB%E9%A2%98/</guid><description>今天尝试在项目中完成切换主题的功能，目前已经实现，故做个记录 新建一个 scss 文件保存颜色配置，例如： // themes.scss $themes: ( light: ( main: #364f6b, second: #3fc1c9, third: #f5f5f5, fourth: #fc5185, ), dark: ( main: #e4f9f5, second: #30e3ca, third: #11999e, fourth: #40514e, ), ); 新建另一个 scss 文件，创建 mixin： // themify.scss @import &amp;#34;./themes.scss&amp;#34;; @mixinthemify($themes: $themes) { @each $theme, $map in $themes { :global(.theme-#{$theme}) &amp;amp; { $theme-map: () !global; @each $key, $submap in $map { $value: map-get(map-get($themes, $theme), &amp;#34;#{$key}&amp;#34;); $theme-map: map-merge( $theme-map, ( $key: $value, ) ) !</description></item><item><title>React项目中同时添加css Modules与普通class</title><link>https://jo-hnny.github.io/p/react%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%90%8C%E6%97%B6%E6%B7%BB%E5%8A%A0css-modules%E4%B8%8E%E6%99%AE%E9%80%9Aclass/</link><pubDate>Wed, 18 Sep 2019 21:16:58 +0800</pubDate><guid>https://jo-hnny.github.io/p/react%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%90%8C%E6%97%B6%E6%B7%BB%E5%8A%A0css-modules%E4%B8%8E%E6%99%AE%E9%80%9Aclass/</guid><description>当我在 react 项目中为一个元素添加了 css modules 的样式，但是由于我要使用 iconfont，必须在元素上添加一个名为 iconfont 的 class 名称，搜来搜去也没找到什么优雅的实现，那就按照 class 的本质实现吧，class 本质就是一个字符串，多个 class 名由空格分割，故:
public render() { return ( &amp;lt;div className={`${styles.uploader}iconfont`}&amp;gt; &amp;lt;input type=&amp;#34;file&amp;#34; className={styles[&amp;#39;file-input&amp;#39;]} /&amp;gt; &amp;amp;#xe7da; &amp;lt;/div&amp;gt; ) } 今天新发现一个库classnames可以很好的解决这个问题,使用如下：
import classNames from &amp;#34;classnames&amp;#34;; import React, { Component } from &amp;#34;react&amp;#34;; import styles from &amp;#34;./index.module.scss&amp;#34;; export default class extends Component { public uploadImage = (e: React.ChangeEvent&amp;lt;HTMLInputElement&amp;gt;) =&amp;gt; { console.log(e.target.files); }; public render() { return ( &amp;lt;div className={classNames(&amp;#34;iconfont&amp;#34;, styles.uploader)}&amp;gt; &amp;lt;input type=&amp;#34;file&amp;#34; accept=&amp;#34;image/png, image/jpeg&amp;#34; multiple={true} className={styles[&amp;#34;file-input&amp;#34;]} onChange={this.</description></item></channel></rss>